which data does the browser send when communicating with specific server(web site)?
      - Request Headers => Contain infromation about the request [ http method / url / browswer type and version ]
      - Form Data       => data enterd in a web form such as login form  
      - Cookies         => small data stored in the browser to track user activity
      - Referrer        => contain the previous url that the user visited

What is IIS? (different between iis and apache)
	

how does the pc knows which program open that extention file  (there is a translator for that)?
	-- the translator in the asp.net is [ Handler ] so the request go through the handler to translate it to the correct [open]
	-- between the request and the handler is [ Moduler ] and is responsible for [URL Rewriting ( one of its job )] / when we try to open souq it will make me go to amazon automatically, how did this rewrite [Moduler]
	-- also there is routing 
      
[ Moduler ] => responsible for URL Rewriting like souq and amazon
[ Handler ] => responsible for delegating the request for the approperiate controller
  
  ----------------- [ Bundles Configuration ] -----------------
       
  => [BundleConfig.cs] 
  public static void RegisterBundles(BundleCollection bundles)
  {
    bundles.Add(new ScriptBundle("~/bundles/jquery").Include(
        "~/Scripts/jquery-{version}.js"));
  }
  => [Global.asax.cs]
  public void Application_Start()
  {
      BundleConfig.RegisterBundles(BundleTable.Bundles);
  }
  => [Views]
  @Scripts.Render("~/bundles/jquery")
  @Styles.Render("~/Content/css")

     
      ---------------------- [ Creating Handler (auto Redirect) ] ----------------------------
 
      in App_Start Folder
      
      - Create new Class called HandlerConfig.cs 
            - inherit IHttpHandler  
            - implement the interface IHttpHander [public void processRequest(HttpContext context){context.Response.Write("message")}] and [public bool IsReusable => true;]
            - create property @ public RequestContext requestContext { get; set; }   // add using directive web.optimization to be able to use this type
            - create constructor for the handler and inject the previous property
                  @ HandlerConfig(RequestContext req){requestContext = req;}  
                  // this constructor Executed from the calling in the returning in the RouteHandlerConfig that Implement IRouteHandler interface [public IHttpHander GetHttpHandler(ReuqestContext requestContext){return new HandlerConfig(requestContext)}]
      
      - create new class called RouteHandlerConfig for routing thehandler
            - inherit IRouteHandler and Implement the interface 
                  @ public IHttpHandler GetHttpHandler(RequestContext requestContext) {return new HandlerConfig(requestContext);}
      
      - in the RouteConfig add new route 
            @ routes.Add(new Route("controller/action/a", new RouteHandlerConfig()));
            // if we have an action called index and controller called home 
                  // so the url : home/index/a will execute RouteHandler which will execute the HandlerConfig method
            // must be before the default route
           
      NOTE:// there is must be an action in the controller and the handler instead of redirect you to that action it directs to the route handler
      
      ---------------------------------------------------------------------------------
      
      // the other way for creating handler      
	- in the previous parameter .Requeset.
	- context.Response.write(context.Request.RawUrl)	make it write the RawUrl on the loaded page inside the method of the httpcontext (write url in the page)
	- add reference [custom handler]
	- in the web.config add the <system.webServer><handlers><add name="nameOfTheHandler" verb="*" (ger or post) type = "Customerhanlder.MiniaHanlder, CustomHander path = "*.minia"/>
	- the application will run on iis(googlechrom) and have an icno in the taskbar besideth battery icon 
	- if(context.Reuest.QueryString.Get("username") != " ")
		contest.Response.Write("this message will be printed in the loaded page if there is no ** like in the if condition ")
		- we can check for the url using @ Respone.Url.Query.Contains("username")	-- this line checks if there is anything write in username in the url
	- every extension must have handler or it will show not found
	
	
	
      ---------------------- [ Creating Module ] --------------------------
      
      - Create new Class in App_Start Folder 
            - inherit from IHttpModule and implement it
            - in Init add @ context.BeginRequest += Context_BeginRequest;
            - creating event handler called [Context_BeginRequest]
                  @     public void Context_BeginRequest(object sender, EventArgs e)
                        {
                              HttpApplication context = sender as HttpApplication;
                              if (context.Context.Request.RawUrl.Contains("Minya"))
                                  context.Context.Response.Redirect(context.Context.Request.RawUrl.Replace("d", "Default"));
                        }
            - Add Reference Module 
                  @         	
                  <system.webServer>      
                        <modules>
                              <add name="CustomModule" type="WebApplication1.App_Start.ModuleConfig, WebApplication1" />
                        </modules>
                  </system.webServer>				
	
      ---------------------------------------------------------------------------------
      
	- instead of doing all of this microsoft added application layer that contain CLR
	- asp.net is the application layer that is added 
	
	active server pages (ASP) 
		[ web form/ mvc/ signalR / realtime / api / single page application ]
		
		router is module validate the url make sure it consists of two segment  the first segment is the controller name and the second segment is the action inside that controller
		router is binding the url segments with the action and controller 
            
		cshtml [ razor engine (rendering )] before the rendering 
		
		
	why we must return interface not viewResult in mvc6 search for it 
	
      
      [Bootstrap][Booswatch] 
      
      How to make custom HTMLHelpers      (we are going to use Extension Method)

      What is the HTTP Pipeline Chain of execution?
      
so the different between routing and http module is that module will edit the url to the new one and routing will pass you through the determined url without changing the url address 
      - because the url is checked from the httpmodule at first then go to the routing to know where is it want to go and bind it 
      - [ Module] able to modify the URL before Arrive to Route
      - [ Route ] Defines how URLs are mapped to controllers and actions
    
[ModelState.IsValid]     


summary
      HTMLHelpers in mvc
            look for different resources ??!!$$
            
            ask her for testing
            
            
            layout
            section
            bunding or bundle
            partial view
            
What is different between Collection, Queues, and HashSet? in purpose and use!
      each one are suited to different kinds of applications, And some are highly specialized to specific tasks like the blow:
      [ Collection ]    - used to represent connectinos on social websites
      [ Queues ]        - used to create task schedulers
      [ HashSets ]      - used in Algorithms 

deployment 
	- self-contained
	- run-time dependent (must have sdk on the client)

dependencies => references    